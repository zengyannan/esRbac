<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rbac.dao.RoleDao">
    <!-- 为dao接口提供方法提供sql语句配置  -->

    <select id="queryById" resultType="Role" parameterType="int">
        select
        role_id,
        role_name,
        role_auth_ids,
        role_auth_ac,
        role_createtime,
        role_state
        from
        `role`  r
        where
        r.role_id = #{roleId};
    </select>

    <select id="queryByName" resultType="Role" parameterType="String">
        select
        role_id,
        role_name,
        role_auth_ids,
        role_auth_ac,
        role_createtime,
        role_state
        from
        `role`  r
        where
        r.role_name = #{roleName};
    </select>


    <select id="queryAll" resultType="Role" >
        select
        role_id,
        role_name,
        role_auth_ids,
        role_auth_ac,
        role_createtime,
        role_state
        from
        `role`
        order by role_createtime asc
        limit #{offset},#{limit}
    </select>
    <select id="queryAllRole" resultType="Role" >
        select
        role_id,
        role_name,
        role_auth_ids,
        role_auth_ac,
        role_createtime,
        role_state
        from
        `role`
        where role_state=1
        order by role_createtime asc
    </select>

    <insert id="insertRole"  keyProperty="role.roleId" parameterType="Role" useGeneratedKeys="true">
        insert
        into `role`(
        role_name,
        role_auth_ids,
        role_auth_ac,
        role_createtime,
        role_state)
        values(
        #{role.roleName},
        #{role.roleAuthIds},
        #{role.roleAuthAc},
        #{role.roleCreatetime},
        #{role.roleState}
        );
    </insert>

    <update id="updateRole" parameterType="Role">
        update `role` set role_name=#{role.roleName},role_auth_ids=#{role.roleAuthIds},role_auth_ac=#{role.roleAuthAc} where role_id=#{role.roleId};
    </update>

    <!--<update id="grandAuth">-->
        <!--update `role` set role_auth_ids=#{roleAuthIds},role_auth_ac=#{roleAuthAc} where role_id=#{roleId};-->
    <!--</update>-->

    <update id="updateState">
        update `role` set role_state=#{roleState} where role_id=#{roleId};
    </update>

    <delete id="deleteRole">
      delete from `role` where role_id=#{roleId}
    </delete>
    <select id="getTotalCount" resultType="java.lang.Long">
        select
        count(role_id)
        from
        `role`
    </select>
</mapper>