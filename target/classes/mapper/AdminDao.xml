<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rbac.dao.AdminDao">
    <!-- 为dao接口提供方法提供sql语句配置  -->

    <select id="queryById" resultType="Admin" parameterType="String" >
        select
        a.admin_id,
        a.admin_name,
        a.admin_nickname,
        a.admin_password,
        a.admin_createtime,
        a.admin_modifytime,
        a.admin_email,
        a.admin_tel,
        a.admin_state,
        r.role_id "role.role_id",
        r.role_name "role.role_name",
        r.role_auth_ids "role.role_auth_ids",
        r.role_auth_ac "role.role_auth_ac",
        r.role_createtime "role.role_createTime",
        r.role_state "role.role_state"
        from
        `admin`  a
        left join `role`  r on a.admin_role_id=r.role_id
        where
        a.admin_id = #{adminId};
    </select>

    <select id="queryByName" resultType="Admin">
        select
        a.admin_id,
        a.admin_name,
        a.admin_nickname,
        a.admin_password,
        a.admin_createtime,
        a.admin_modifytime,
        a.admin_email,
        a.admin_tel,
        a.admin_state,
        r.role_id "role.role_id",
        r.role_name "role.role_name",
        r.role_auth_ids "role.role_auth_ids",
        r.role_auth_ac "role.role_auth_ac",
        r.role_createtime "role.role_createTime",
        r.role_state "role.role_state"
        from
        `admin`  a
        left join `role`  r on a.admin_role_id=r.role_id
        where
        a.admin_name = #{adminName};
    </select>

    <select id="queryAll" resultType="Admin">
        select
        a.admin_id,
        a.admin_name,
        a.admin_nickname,
        a.admin_password,
        a.admin_createtime,
        a.admin_modifytime,
        a.admin_email,
        a.admin_tel,
        a.admin_state,
        r.role_id "role.role_id",
        r.role_name "role.role_name",
        r.role_auth_ids "role.role_auth_ids",
        r.role_auth_ac "role.role_auth_ac",
        r.role_createtime "role.role_createTime",
        r.role_state "role.role_state"
        from
        `admin`  a
        left join `role`  r on a.admin_role_id=r.role_id
        order by admin_createtime asc
        limit #{offset},#{limit}
    </select>


    <select id="getTotalCount" resultType="java.lang.Long">
        select
        count(admin_id)
        from
        `admin`
    </select>

    <insert id="insertAdmin" parameterType="Admin">
       insert ignore into
       `admin`(
        admin_id,
        admin_name,
        admin_nickname,
        admin_password,
        admin_createtime,
        admin_modifytime,
        admin_email,
        admin_tel,
        admin_state,
        admin_role_id)
        values(#{admin.adminId},
        #{admin.adminName},
        #{admin.adminNickname},
        #{admin.adminPassword},
        #{admin.adminCreatetime},
        #{admin.adminModifytime},
        #{admin.adminEmail},
        #{admin.adminTel},
        #{admin.adminState},
        #{admin.adminRoleId});
    </insert>

    <update id="updateAdmin"  parameterType="Admin" >
        update `admin` set admin_name=#{admin.adminName},
                           admin_nickname=#{admin.adminNickname},
                           admin_password=#{admin.adminPassword},
                           admin_email=#{admin.adminEmail},
                           admin_tel=#{admin.adminTel},
                           admin_modifytime=#{admin.adminModifytime},
                           admin_role_id=#{admin.adminRoleId}
                           where admin_id=#{admin.adminId}
    </update>


    <update id="updateState" >
        update `admin` set admin_state=#{adminState} where admin_id=#{adminId}
    </update>

    <update id="setRole" >
        update `admin` set admin_role_id=#{adminRoleId} where admin_id=#{adminId}
    </update>

    <delete id="deleteAdmin">
        delete from `admin` where admin_id=#{adminId}
    </delete>

</mapper>